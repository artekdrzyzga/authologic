exit
elem.first
elem
elem.class
elem.count
elem
count = elem.item_count + params[:ad][:item_count].to_i
(elem = tranhead.tranelems.where(:ad_id => params[:ad][:id])).count > 0
(elem = tranhead.tranelems.where(:ad_id => params[:ad][:id]))
elem = tranhead.tranelems.where(:ad_id => params[:ad][:id])
tranhead
has_basket_in_progress
c
x
x = has_basket_in_progress.present
has_basket_in_progress.present
c
Tranhead::STATUSES[3]
Tranhead::STATUSES
Tranhead::STATUSES.value(3)
@tranhead
exit
params[:id]
Tranhead.find(11)
params
exit
self.status.blank?
self.status.present?
self.status
c
params
exit
x.class
x
x = current_user.tranheads.where(:status => "in_progress").first
x
x = current_user.tranheads.find(:status => "in_progress")
x.class
x
x = current_user.tranheads.where(:status => "in_progress").limit(1)
current_user.tranheads.where(:status => "in_progress").limit(1)
current_user.tranheads.find(:all, :conditions => {:status => "in_progress"})
current_user.tranheads.find(:status => "in_progress")
current_user.tranheads.where(:status => "in_progress").count
current_user.tranheads.where(:status => "in_progress")
current_user.tranheads
current_user.tranheads.count
current_user.tranheads
current_user.tranelms
current_user.tranelm
current_user
exit
::Rails.logger.error("Can't add tranelm to tranhead")
::Rails.logger.debug
::Rails.log.debug
::Rails.log.new
::Rails.log
tranhead.save
tranhead.to_json
tranhead.inspect
yaml tranhead
y tranhead
tranhead
tranhead.tranelems.new(:ad_id => params[:ad][:id])
tranhead.tranelems
tranhead
params[:ad][:id]
Tranelem
Tranelm
tranhead.tranelems.new(:)
tranhead = current_user.tranheads.new(:status => "in_progress")
[].present?
0.present?
nil.present?
"".present?
has_basket_in_progress.present?
has_basket_in_progress?
has_basket_in_progress
exit
tranhead.tranelem
tranhead.tranelems
tranhead.tranelem
tranhead.tranelems
tranhead
tranhead = current_user.tranheads.new(:status => "in_progress")
tranhead
tanhead = current_user.tranheads.new(:status => "in_progress")
end
  current_user.tranheads.where(:status => "in_progress")
def has_basket_in_progress
end
current_user.tranheads.where(:status => "in_progress")
def has_basket_in_progress
current_user.tranheads.where(:status => "in_progress")
current_user.tranheads
current_user
params[:ad]
params[:id]
params
exit
params[:ad_id]
params[:ad]
params
params]
